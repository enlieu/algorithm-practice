/**
 * @param {string} s
 * @param {string[]} wordDict
 * @return {string[]}
 */
​
var wordBreak = function(s, wordDict) {
  let wordMap = {};
  
  wordDict.forEach((word) => {
    wordMap[word] = true;
  });
​
  let memo = {};
​
  const helper = (str) => {
    if (str === '') {
      return [[]];
    }
    if (memo[str] !== undefined) {
      return memo[str];
    }
​
    memo[str] = [];
    
    for (let i = 1; i <= str.length; i++) {
      let word = str.substring(0, i);
      if (wordMap[word]) {
        let rest = helper(str.substring(i));
        for (let j = 0; j < rest.length; j++) {
          memo[str].push([word, ...rest[j]]);
        }
      }
    }
    return memo[str];
  };
​
  helper(s);
​
  let ans = {};
​
  memo[s].forEach((sentence) => {
    ans[sentence.join(' ')] = true;
  });
​
  return Object.keys(ans);
};
​
