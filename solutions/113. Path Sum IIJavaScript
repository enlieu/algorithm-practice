/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @param {number} sum
 * @return {number[][]}
 */
var pathSum = function(root, sum) {
  if (root === null) return [];
  let res = []
  
  let queue = [[root, root.val, [root.val]]]
  
  while (queue.length) {
    let [current, currSum, vals] = queue.shift();
​
    if (current.left) {
      queue.push([current.left, currSum + current.left.val, [...vals, current.left.val]])
    }
    
    if (current.right) {
      queue.push([current.right, currSum + current.right.val, [...vals, current.right.val]])
    }
​
    if (currSum === sum && !current.right && !current.left) {
      res.push(vals)
    }
  }
  
  return res
};
